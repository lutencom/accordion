{"version":3,"file":"accordion/view.js","mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,MAAMA,SAAS,CAAC;EACfC,WAAWA,CAACC,OAAO,EAAE;IACpB,IAAI,CAACC,MAAM,GAAGD,OAAO;IACrB,IAAI,CAACE,QAAQ,GAAG,IAAI,CAACD,MAAM,CAACE,aAAa,CAAC,uBAAuB,CAAC;IAElE,MAAMC,UAAU,GAAG,IAAI,CAACF,QAAQ,CAACG,YAAY,CAAC,eAAe,CAAC;IAC9D,IAAI,CAACC,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAACJ,UAAU,CAAC;IAEpD,IAAI,CAACK,IAAI,GAAG,IAAI,CAACP,QAAQ,CAACG,YAAY,CAAC,eAAe,CAAC,KAAK,MAAM;;IAElE;IACA,IAAI,CAACH,QAAQ,CAACQ,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAACC,aAAa,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EACvE;EAEAD,aAAaA,CAAA,EAAG;IACf,IAAI,CAACE,MAAM,CAAC,CAAC,IAAI,CAACJ,IAAI,CAAC;EACxB;EAEAI,MAAMA,CAACJ,IAAI,EAAE;IACZ;IACA,IAAIA,IAAI,KAAK,IAAI,CAACA,IAAI,EAAE;MACvB;IACD;;IAEA;IACA,IAAI,CAACA,IAAI,GAAGA,IAAI;;IAEhB;IACA,IAAI,CAACP,QAAQ,CAACY,YAAY,CAAC,eAAe,EAAE,GAAGL,IAAI,EAAE,CAAC;IACtD,IAAIA,IAAI,EAAE;MACT,MAAMM,MAAM,GAAG,IAAI,CAACT,SAAS,CAACU,YAAY;MAC1C,IAAI,CAACV,SAAS,CAACW,KAAK,CAACF,MAAM,GAAGA,MAAM,GAAG,IAAI;MAC3C,IAAI,CAACT,SAAS,CAACY,SAAS,CAACC,GAAG,CAAC,UAAU,CAAC;MACxC,IAAI,CAACb,SAAS,CAACY,SAAS,CAACE,MAAM,CAAC,WAAW,CAAC;IAE7C,CAAC,MAAM;MACN,IAAI,CAACd,SAAS,CAACW,KAAK,CAACF,MAAM,GAAG,CAAC;MAC/B,IAAI,CAACT,SAAS,CAACY,SAAS,CAACE,MAAM,CAAC,UAAU,CAAC;MAC3C,IAAI,CAACd,SAAS,CAACY,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC;IAC1C;EACD;;EAEA;EACAV,IAAIA,CAAA,EAAG;IACN,IAAI,CAACI,MAAM,CAAC,IAAI,CAAC;EAClB;EAEAQ,KAAKA,CAAA,EAAG;IACP,IAAI,CAACR,MAAM,CAAC,KAAK,CAAC;EACnB;AACD;;AAEA;AACA,MAAMS,UAAU,GAAGf,QAAQ,CAACgB,gBAAgB,CAAC,eAAe,CAAC;AAC7DD,UAAU,CAACE,OAAO,CAAEC,WAAW,IAAK;EACnC,IAAI3B,SAAS,CAAC2B,WAAW,CAAC;AAC3B,CAAC,CAAC,C","sources":["webpack://accordion/./src/accordion/view.js"],"sourcesContent":["/*\n *   This content is licensed according to the W3C Software License at\n *   https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n *\n *   Simple accordion pattern example\n */\n\n'use strict';\n\nclass Accordion {\n\tconstructor(domNode) {\n\t\tthis.rootEl = domNode;\n\t\tthis.buttonEl = this.rootEl.querySelector('button[aria-expanded]');\n\n\t\tconst controlsId = this.buttonEl.getAttribute('aria-controls');\n\t\tthis.contentEl = document.getElementById(controlsId);\n\n\t\tthis.open = this.buttonEl.getAttribute('aria-expanded') === 'true';\n\n\t\t// add event listeners\n\t\tthis.buttonEl.addEventListener('click', this.onButtonClick.bind(this));\n\t}\n\n\tonButtonClick() {\n\t\tthis.toggle(!this.open);\n\t}\n\n\ttoggle(open) {\n\t\t// don't do anything if the open state doesn't change\n\t\tif (open === this.open) {\n\t\t\treturn;\n\t\t}\n\n\t\t// update the internal state\n\t\tthis.open = open;\n\n\t\t// handle DOM updates\n\t\tthis.buttonEl.setAttribute('aria-expanded', `${open}`);\n\t\tif (open) {\n\t\t\tconst height = this.contentEl.scrollHeight;\n\t\t\tthis.contentEl.style.height = height + \"px\";\n\t\t\tthis.contentEl.classList.add(\"expanded\");\n\t\t\tthis.contentEl.classList.remove(\"collapsed\");\n\n\t\t} else {\n\t\t\tthis.contentEl.style.height = 0;\n\t\t\tthis.contentEl.classList.remove(\"expanded\");\n\t\t\tthis.contentEl.classList.add(\"collapsed\");\n\t\t}\n\t}\n\n\t// Add public open and close methods for convenience\n\topen() {\n\t\tthis.toggle(true);\n\t}\n\n\tclose() {\n\t\tthis.toggle(false);\n\t}\n}\n\n// init accordions\nconst accordions = document.querySelectorAll('.accordion h3');\naccordions.forEach((accordionEl) => {\n\tnew Accordion(accordionEl);\n});\n"],"names":["Accordion","constructor","domNode","rootEl","buttonEl","querySelector","controlsId","getAttribute","contentEl","document","getElementById","open","addEventListener","onButtonClick","bind","toggle","setAttribute","height","scrollHeight","style","classList","add","remove","close","accordions","querySelectorAll","forEach","accordionEl"],"sourceRoot":""}